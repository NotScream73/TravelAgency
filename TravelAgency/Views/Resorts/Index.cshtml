@using TravelAgency.Helpers
@model TravelAgency.ViewModels.Resorts.ResortIndexViewModel

@{
    ViewData["Title"] = "Список курортов";
}

<h1>Список курортов</h1>
<hr />
<p>
    <a class="btn btn-success" asp-action="Create">Добавить курорт</a>
</p>

@if (Model.List.Count != 0)
{
    <table class="table table-bordered" style="width: 100%">
        <thead>
            <tr>
                <th scope="col" style="width: 5%"></th>
                <th scope="col">
                    @Html.DisplayNameFor(_ => Model.List[0].Name)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(_ => Model.List[0].Type)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.List)
            {
                <tr>
                    <th scope="row">
                        <a class="text" asp-action="Edit" asp-route-id="@item.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-square" viewBox="0 0 16 16">
                                <path d="M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z" />
                                <path fill-rule="evenodd" d="M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5z" />
                            </svg>
                        </a> |
                        <a class="text" asp-action="Delete" asp-route-id="@item.Id">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5m3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0z" />
                                <path d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4zM2.5 3h11V2h-11z" />
                            </svg>
                        </a>
                    </th>
                    <td>
                        <a asp-action="Details" asp-route-id="@item.Id">@Html.DisplayFor(_ => item.Name)</a>
                    </td>
                    <td>
                        @item.Type.GetDescription()
                    </td>
                </tr>
            }
        </tbody>
    </table>

    <nav>
        <ul class="pagination justify-content-center">
            <li class="page-item @(Model.Filter.Page == 0 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", "Resorts", new { Name = Model.Filter.Name, Page = 0, Size = Model.Filter.Size })" tabindex="-1">Первая</a>
            </li>
            @for (int i = 0; i <= Math.Ceiling((double)Model.Filter.TotalCount / Model.Filter.Size) - 1; i++)
            {
                <li class="page-item @(i == Model.Filter.Page ? "active" : "")">
                    <a class="page-link" href="@Url.Action("Index", "Resorts", new { Name = Model.Filter.Name, Page = i, Size = Model.Filter.Size })">@(i + 1)</a>
                </li>
            }
            <li class="page-item @(Model.Filter.Page == Math.Ceiling((double)Model.Filter.TotalCount / Model.Filter.Size) - 1 ? "disabled" : "")">
                <a class="page-link" href="@Url.Action("Index", "Resorts", new { Name = Model.Filter.Name, Page = Math.Ceiling((double)Model.Filter.TotalCount / Model.Filter.Size), Size = Model.Filter.Size })">Последняя</a>
            </li>
        </ul>
    </nav>
}
else
{
    <div>
        Список пуст
    </div>
}

@section Head {
    <style>
        a.text:active,
        a.text:hover,
        a.text {
            text-decoration: none;
            color: #666;
        }
    </style>
}